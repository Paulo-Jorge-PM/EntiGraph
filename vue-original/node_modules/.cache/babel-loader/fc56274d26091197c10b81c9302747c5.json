{"remainingRequest":"/home/paulo/Repos/mei/EntiGraph/vue/node_modules/thread-loader/dist/cjs.js!/home/paulo/Repos/mei/EntiGraph/vue/node_modules/babel-loader/lib/index.js!/home/paulo/Repos/mei/EntiGraph/vue/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/paulo/Repos/mei/EntiGraph/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/paulo/Repos/mei/EntiGraph/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/paulo/Repos/mei/EntiGraph/vue/src/components/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/paulo/Repos/mei/EntiGraph/vue/src/components/Search.vue","mtime":1636398547855},{"path":"/home/paulo/Repos/mei/EntiGraph/vue/node_modules/cache-loader/dist/cjs.js","mtime":1615487375942},{"path":"/home/paulo/Repos/mei/EntiGraph/vue/node_modules/thread-loader/dist/cjs.js","mtime":1615487376462},{"path":"/home/paulo/Repos/mei/EntiGraph/vue/node_modules/babel-loader/lib/index.js","mtime":1615487375922},{"path":"/home/paulo/Repos/mei/EntiGraph/vue/node_modules/vuetify-loader/lib/loader.js","mtime":1615487376506},{"path":"/home/paulo/Repos/mei/EntiGraph/vue/node_modules/cache-loader/dist/cjs.js","mtime":1615487375942},{"path":"/home/paulo/Repos/mei/EntiGraph/vue/node_modules/vue-loader/lib/index.js","mtime":1615487376486}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmVudHJpZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwiOwppbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSAiL2hvbWUvcGF1bG8vUmVwb3MvbWVpL0VudGlHcmFwaC92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9wYXVsby9SZXBvcy9tZWkvRW50aUdyYXBoL3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7IC8vY29uc3QgbGhvc3QgPSByZXF1aXJlKCJAL2NvbmZpZy9nbG9iYWwiKS5saG9zdDsKLy9jb25zdCBncmFwaGRiID0gcmVxdWlyZSgiQC9jb25maWcvZ2xvYmFsIikuZ3JhcGhkYjsKLy9jb25zdCBmbGFza1NwYXJxbCA9IHJlcXVpcmUoIkAvY29uZmlnL2dsb2JhbCIpLmZsYXNrU3BhcnFsICsgJz9vdXRwdXQ9anNvbiZleHRlcm5hbD10cnVlJzsKLy9jb25zdCBmbGFza0Rvd25sb2FkID0gcmVxdWlyZSgiQC9jb25maWcvZ2xvYmFsIikuZmxhc2tEb3dubG9hZCArICc/b3V0cHV0PWNzdic7Cgp2YXIgbmV0bGFuZ19ncmFwaGRiID0gcmVxdWlyZSgiQC9jb25maWcvZ2xvYmFsIikubmV0bGFuZ19ncmFwaGRiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTZWFyY2gnLAoKICAvKmRldlNlcnZlcjogewogICAgICAgIHByb3h5OiAnaHR0cDovLzEyNy4wLjAuMTo4MDgwLycsCiAgICB9LCovCgogIC8qcnVsZXM6IHsKICAgICduby11bnVzZWQtdmFycyc6ICdvZmYnCiAgfSwqLwogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWFyY2g6ICcnLAogICAgICBoZGFkb3M6IFsKICAgICAgLyp7CiAgICAgICAgdGV4dDogJ1TDrXR1bG8nLAogICAgICAgIGFsaWduOiAnc3RhcnQnLAogICAgICAgIHNvcnRhYmxlOiBmYWxzZSwKICAgICAgICB2YWx1ZTogJ3JvdycsCiAgICAgIH0sCiAgICAgIHsgdGV4dDogJ0RhdGEnLCB2YWx1ZTogJ3JvdycgfSwKICAgICAgeyB0ZXh0OiAnVGV4dG8nLCB2YWx1ZTogJ3JvdycgfSwqLwogICAgICB7CiAgICAgICAgdGV4dDogJ0RhdGEnLAogICAgICAgIHNvcnRhYmxlOiB0cnVlLAogICAgICAgIHZhbHVlOiAnZGF0YVB1YicKICAgICAgfSwgLy97IHRleHQ6ICdNaW5vcmlhJywgc29ydGFibGU6IHRydWUsIHZhbHVlOiAnbWlub3JpdHknIH0sCiAgICAgIHsKICAgICAgICB0ZXh0OiAnVMOtdHVsbycsCiAgICAgICAgdmFsdWU6ICd0aXRsZScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdJRCcsCiAgICAgICAgdmFsdWU6ICdhcnRpY2xlJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ09yaWdpbmFsJywKICAgICAgICB2YWx1ZTogJ2xpbmsnCiAgICAgIH0gLy97IHRleHQ6ICdUZXh0bycsIHZhbHVlOiAndGV4dCcgfSwKICAgICAgXSwKICAgICAgY2xhc3NlczogW3sKICAgICAgICAndGV4dCc6ICdNaW5vcmlhcycsCiAgICAgICAgJ2lkJzogJ21pbm9yaXR5JywKICAgICAgICAnc3ViY2xhc3Nlcyc6IFsnTWlub3JpdHknLCAnbWlub3JpdHknXQogICAgICB9LCB7CiAgICAgICAgJ3RleHQnOiAnUGVzc29hcycsCiAgICAgICAgJ2lkJzogJ3BlcnNvbk5hbWUnLAogICAgICAgICdzdWJjbGFzc2VzJzogWydQZXJzb24nLCAncGVyc29uTmFtZSddCiAgICAgIH0sIHsKICAgICAgICAndGV4dCc6ICdQYWxhdnJhcy1jaGF2ZScsCiAgICAgICAgJ2lkJzogJ2tleXdvcmQnLAogICAgICAgICdzdWJjbGFzc2VzJzogWydLZXl3b3JkJywgJ2tleXdvcmQnXQogICAgICB9LCB7CiAgICAgICAgJ3RleHQnOiAnUGFydGlkb3MnLAogICAgICAgICdpZCc6ICdwb2xpdGljYWxQYXJ0eScsCiAgICAgICAgJ3N1YmNsYXNzZXMnOiBbJ1BvbGl0aWNhbFBhcnR5JywgJ3BvbGl0aWNhbFBhcnR5J10KICAgICAgfSwgewogICAgICAgICd0ZXh0JzogJ0FuaW1haXMnLAogICAgICAgICdpZCc6ICdhbmltYWwnLAogICAgICAgICdzdWJjbGFzc2VzJzogWydBbmltYWwnLCAnYW5pbWFsJ10KICAgICAgfSwgewogICAgICAgICd0ZXh0JzogJ0V0bmlhcycsCiAgICAgICAgJ2lkJzogJ2V0aG5pY2l0eScsCiAgICAgICAgJ3N1YmNsYXNzZXMnOiBbJ0V0aG5pY2l0eScsICdldGhuaWNpdHknXQogICAgICB9LCB7CiAgICAgICAgJ3RleHQnOiAnUmVsaWdpw7VlcycsCiAgICAgICAgJ2lkJzogJ3JlbGlnaW9uJywKICAgICAgICAnc3ViY2xhc3Nlcyc6IFsnUmVsaWdpb24nLCAncmVsaWdpb24nXQogICAgICB9LCB7CiAgICAgICAgJ3RleHQnOiAnQ2lkYWRlcycsCiAgICAgICAgJ2lkJzogJ2NpdHknLAogICAgICAgICdzdWJjbGFzc2VzJzogWydDaXR5JywgJ2NpdHknXQogICAgICB9LCB7CiAgICAgICAgJ3RleHQnOiAnUGHDrXNlcycsCiAgICAgICAgJ2lkJzogJ2NvdW50cnknLAogICAgICAgICdzdWJjbGFzc2VzJzogWydDb3VudHJ5JywgJ2NvdW50cnknXQogICAgICB9LCB7CiAgICAgICAgJ3RleHQnOiAnQ29udGluZW50ZXMnLAogICAgICAgICdpZCc6ICdjb250aW5lbnQnLAogICAgICAgICdzdWJjbGFzc2VzJzogWydDb250aW5lbnQnLCAnY29udGluZW50J10KICAgICAgfSwgewogICAgICAgICd0ZXh0JzogJ091dHJvcyBMdWdhcmVzJywKICAgICAgICAnaWQnOiAnb3RoZXJQbGFjZScsCiAgICAgICAgJ3N1YmNsYXNzZXMnOiBbJ090aGVyUGxhY2UnLCAnb3RoZXJQbGFjZSddCiAgICAgIH0sIHsKICAgICAgICAndGV4dCc6ICdEaWFzIGRhIFNlbWFuYScsCiAgICAgICAgJ2lkJzogJ3dlZWtkYXknLAogICAgICAgICdzdWJjbGFzc2VzJzogWydXZWVrZGF5JywgJ3dlZWtkYXknXQogICAgICB9LCB7CiAgICAgICAgJ3RleHQnOiAnTWVzZXMnLAogICAgICAgICdpZCc6ICdtb250aCcsCiAgICAgICAgJ3N1YmNsYXNzZXMnOiBbJ01vbnRoJywgJ21vbnRoJ10KICAgICAgfSwgewogICAgICAgICd0ZXh0JzogJ0VudGlkYWRlcycsCiAgICAgICAgJ2lkJzogJ2VudGl0eScsCiAgICAgICAgJ3N1YmNsYXNzZXMnOiBbJ0VudGl0eScsICdlbnRpdHknXQogICAgICB9LCB7CiAgICAgICAgJ3RleHQnOiAnQ2x1YmVzIGRlIEZ1dGVib2wnLAogICAgICAgICdpZCc6ICdmb290YmFsJywKICAgICAgICAnc3ViY2xhc3Nlcyc6IFsnRm9vdGJhbGwnLCAnZm9vdGJhbCddCiAgICAgIH0sIHsKICAgICAgICAndGV4dCc6ICdEZXNwb3J0b3MnLAogICAgICAgICdpZCc6ICdzcG9ydCcsCiAgICAgICAgJ3N1YmNsYXNzZXMnOiBbJ1Nwb3J0JywgJ3Nwb3J0J10KICAgICAgfSwgewogICAgICAgICd0ZXh0JzogJ1RhZ3MgZG8gSm9ybmFsJywKICAgICAgICAnaWQnOiAndGFnJywKICAgICAgICAnc3ViY2xhc3Nlcyc6IFsnVGFnJywgJ3RhZyddCiAgICAgIH0sIHsKICAgICAgICAndGV4dCc6ICdNYXJjYXMgZGUgUHJvZHV0b3MnLAogICAgICAgICdpZCc6ICdicmFuZCcsCiAgICAgICAgJ3N1YmNsYXNzZXMnOiBbJ0JyYW5kJywgJ2JyYW5kJ10KICAgICAgfSwgewogICAgICAgICd0ZXh0JzogJ0NhbmFpcyBkZSBUVicsCiAgICAgICAgJ2lkJzogJ3R2Q2hhbm5lbCcsCiAgICAgICAgJ3N1YmNsYXNzZXMnOiBbJ1R2Q2hhbm5lbCcsICd0dkNoYW5uZWwnXQogICAgICB9LCB7CiAgICAgICAgJ3RleHQnOiAnTWFyY2FzIGRlIENhcnJvcycsCiAgICAgICAgJ2lkJzogJ2NhckJyYW5kJywKICAgICAgICAnc3ViY2xhc3Nlcyc6IFsnQ2FyQnJhbmQnLCAnY2FyQnJhbmQnXQogICAgICB9LCB7CiAgICAgICAgJ3RleHQnOiAnRGVzcG9ydG9zJywKICAgICAgICAnaWQnOiAnc3BvcnQnLAogICAgICAgICdzdWJjbGFzc2VzJzogWydTcG9ydCcsICdzcG9ydCddCiAgICAgIH1dLAogICAgICBmaWx0ZXJzOiBbewogICAgICAgICd0ZXh0JzogJ0FubyBkZSBwdWJsaWNhw6fDo28gbWFpb3IgZG8gcXVlLi4uJywKICAgICAgICAndmFsdWUnOiAnZGF0YU1haW9yJwogICAgICB9LCB7CiAgICAgICAgJ3RleHQnOiAnQW5vIGRlIHB1YmxpY2HDp8OjbyBtZW5vciBkbyBxdWUuLi4nLAogICAgICAgICd2YWx1ZSc6ICdkYXRhTWVub3InCiAgICAgIH0sIHsKICAgICAgICAndGV4dCc6ICdBbm8gZGUgcHVibGljYcOnw6NvIG1haW9yIGEuLi4nLAogICAgICAgICd2YWx1ZSc6ICdkYXRhSWd1YWwnCiAgICAgIH0sIHsKICAgICAgICAndGV4dCc6ICdNaW5vcmlhIGlndWFsIGEuLi4nLAogICAgICAgICd2YWx1ZSc6ICdtaW5vcmlhSWd1YWwnCiAgICAgIH0sIHsKICAgICAgICAndGV4dCc6ICdDb250w6ltIHBhbGF2cmEgaWd1YWwgYS4uLicsCiAgICAgICAgJ3ZhbHVlJzogJ2tleXdvcmRJZ3VhbCcKICAgICAgfV0sCiAgICAgIGFjdGl2ZUNsYXNzZTogbnVsbCwKICAgICAgc3ViY2xhc3NlczogbnVsbCwKICAgICAgYWN0aXZlU3ViY2xhc3NlczogbnVsbCwKICAgICAgc3ViY2xhc3NlczM6IG51bGwsCiAgICAgIHRhYmxlOiBudWxsLAogICAgICB0YWJsZUNvdW50OiBudWxsLAogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgZmlsdGVyOiBudWxsLAogICAgICBpbnB1dEZpbHRlcjogbnVsbCwKICAgICAgbGltaXQ6ICc1MDAwJywKICAgICAgcXVlcnk6IG51bGwsCiAgICAgIGRiOiAnbmV0bGFuZzInLAogICAgICBhcnRpY2xlUGFnZTogJ2h0dHA6Ly9taW5vcnMuaWxjaC51bWluaG8ucHQvYXJ0aWNsZXMnCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHN1YmNsYXNzZXNGaWx0ZXI6IGZ1bmN0aW9uIHN1YmNsYXNzZXNGaWx0ZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLnN1YmNsYXNzZXMuZmlsdGVyKGZ1bmN0aW9uIChjbGFzc2UpIHsKICAgICAgICByZXR1cm4gIVsnMzExJywgJzExMicsICcxOTgwcycsICcxOTgxJywgJzcwMicsICc5OSddLmluY2x1ZGVzKGNsYXNzZS5yb3cpOwogICAgICB9KTsKICAgIH0sCiAgICBtZXRhZGFkb3M6IGZ1bmN0aW9uIG1ldGFkYWRvcygpIHsKICAgICAgdmFyIGxpbmsgPSAnJzsKCiAgICAgIGlmICh0aGlzLmRiID09ICdpbmRpZmVyZW5jaWFkbycpIHsKICAgICAgICBsaW5rID0gdGhpcy5hcnRpY2xlUGFnZSArICc/ZGI9aW5kaWZlcmVuY2lhZG8maWQ9JzsKICAgICAgfSBlbHNlIHsKICAgICAgICBsaW5rID0gdGhpcy5hcnRpY2xlUGFnZSArICc/aWQ9JzsKICAgICAgfQoKICAgICAgcmV0dXJuIGxpbms7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgey8vICBhbGVydCh0aGlzLnNlbGVjdGVkX2NsYXNzZSkKICAgIC8vICB0aGlzLnNlbGVjdGVkX2NsYXNzZSA9IHRoaXMuY2xhc3Nlc1swXS50ZXh0OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gKCkgewogICAgdmFyIF9jcmVhdGVkID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDM7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dC50MCk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgM11dKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgICByZXR1cm4gX2NyZWF0ZWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gY3JlYXRlZDsKICB9KCksCiAgbWV0aG9kczogewogICAgY2xhc3NlT3B0aW9uOiBmdW5jdGlvbiBjbGFzc2VPcHRpb24oZXZlbnQpIHsKICAgICAgdmFyIGlkID0gZXZlbnQudGFyZ2V0LnZhbHVlOwogICAgICB2YXIgcm93ID0gdGhpcy5maW5kT2JqZWN0KHRoaXMuY2xhc3NlcywgImlkIiwgaWQpOwogICAgICB0aGlzLmFjdGl2ZUNsYXNzZSA9IHJvdzsKICAgICAgdmFyIHF1ZXJ5ID0gIlxuU0VMRUNUIERJU1RJTkNUID9yb3cgV0hFUkUge1xuICA/YXJ0aWNsZSBhIDoiICsgcm93LnN1YmNsYXNzZXNbMF0gKyAiIC5cbiAgP2FydGljbGUgOiIgKyByb3cuc3ViY2xhc3Nlc1sxXSArICIgP3JvdyAuXG59XG5PUkRFUiBCWSA/cm93XG4gICAgICAiOwogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLnN1YmNsYXNzZXMgPSBudWxsOwogICAgICB0aGlzLmFjdGl2ZVN1YmNsYXNzZXMgPSBudWxsOwogICAgICB0aGlzLmZpbHRlciA9IG51bGw7CiAgICAgIHRoaXMuaW5wdXRGaWx0ZXIgPSBudWxsOwogICAgICB0aGlzLnF1ZXJ5Q2xhc3NlKHF1ZXJ5LCByb3cpOwogICAgICB0aGlzLnRhYmxlUXVlcnkocm93LnN1YmNsYXNzZXNbMF0sIHJvdy5zdWJjbGFzc2VzWzFdLCAnJywgJycpOyAvL3RoaXMucXVlcnlDbGFzc2UocXVlcnksIHJvdykKICAgICAgLy90aGlzLm5ld1N1YkNsYXNzZShxdWVyeSwgcm93KTsKICAgICAgLy90aGlzLnRlc3RlKHJvdyk7CiAgICB9LAogICAgc3ViY2xhc3NPcHRpb246IGZ1bmN0aW9uIHN1YmNsYXNzT3B0aW9uKGV2ZW50KSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIHRoaXMuYWN0aXZlU3ViY2xhc3NlcyA9IG51bGw7CiAgICAgIHRoaXMuZmlsdGVyID0gbnVsbDsKICAgICAgdGhpcy5pbnB1dEZpbHRlciA9IG51bGw7CiAgICAgIHRoaXMuYWN0aXZlU3ViY2xhc3NlcyA9IGV2ZW50LnRhcmdldC52YWx1ZTsKICAgICAgdGhpcy50YWJsZVF1ZXJ5KHRoaXMuYWN0aXZlQ2xhc3NlLnN1YmNsYXNzZXNbMF0sIHRoaXMuYWN0aXZlQ2xhc3NlLnN1YmNsYXNzZXNbMV0sIHRoaXMuYWN0aXZlU3ViY2xhc3NlcywgJycpOwogICAgfSwKICAgIGZpbHRyb09wdGlvbjogZnVuY3Rpb24gZmlsdHJvT3B0aW9uKGV2ZW50KSB7CiAgICAgIHRoaXMuZmlsdGVyID0gZXZlbnQudGFyZ2V0LnZhbHVlOwogICAgICB0aGlzLmlucHV0RmlsdGVyID0gbnVsbDsKICAgIH0sCiAgICBpbnB1dE9wdGlvbjogZnVuY3Rpb24gaW5wdXRPcHRpb24oKSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIHZhciBmaWx0ZXIgPSAnJzsKCiAgICAgIGlmICh0aGlzLmZpbHRlciA9PSAnZGF0YU1haW9yJykgewogICAgICAgIGZpbHRlciA9ICJcbiAgICAgICAgRklMVEVSKFlFQVIoP2RhdGFQdWIpID49ICIgKyB0aGlzLmlucHV0RmlsdGVyICsgIikgLiI7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5maWx0ZXIgPT0gJ2RhdGFNZW5vcicpIHsKICAgICAgICBmaWx0ZXIgPSAiXG4gICAgICAgIEZJTFRFUihZRUFSKD9kYXRhUHViKSA8PSAiICsgdGhpcy5pbnB1dEZpbHRlciArICIpIC4iOwogICAgICB9IGVsc2UgaWYgKHRoaXMuZmlsdGVyID09ICdkYXRhSWd1YWwnKSB7CiAgICAgICAgZmlsdGVyID0gIlxuICAgICAgICBGSUxURVIoWUVBUig/ZGF0YVB1YikgPSAiICsgdGhpcy5pbnB1dEZpbHRlciArICIpIC4iOwogICAgICB9IGVsc2UgaWYgKHRoaXMuZmlsdGVyID09ICdtaW5vcmlhSWd1YWwnKSB7CiAgICAgICAgZmlsdGVyID0gIlxuICAgICAgICA/YXJ0aWNsZSA6cmVmZXJlc01pbm9yaXR5ID9NaW5vcml0eSAuXG4gICAgICAgID9NaW5vcml0eSA6bWlub3JpdHkgP21pbm9yaXR5IC5cbiAgICAgICAgRklMVEVSIChDT05UQUlOUyg/bWlub3JpdHkgLCBcIiIgKyB0aGlzLmlucHV0RmlsdGVyLnRvTG93ZXJDYXNlKCkgKyAiXCIpKSAuIjsKICAgICAgfSBlbHNlIGlmICh0aGlzLmZpbHRlciA9PSAna2V5d29yZElndWFsJykgewogICAgICAgIGZpbHRlciA9ICJcbiAgICAgICAgRklMVEVSIChDT05UQUlOUyg/dGV4dCAsIFwiIiArIHRoaXMuaW5wdXRGaWx0ZXIudG9Mb3dlckNhc2UoKSArICJcIikpIC4iOwogICAgICB9CgogICAgICBpZiAoZmlsdGVyICE9ICcnKSB7CiAgICAgICAgdGhpcy50YWJsZVF1ZXJ5KHRoaXMuYWN0aXZlQ2xhc3NlLnN1YmNsYXNzZXNbMF0sIHRoaXMuYWN0aXZlQ2xhc3NlLnN1YmNsYXNzZXNbMV0sIHRoaXMuYWN0aXZlU3ViY2xhc3NlcywgZmlsdGVyKTsKICAgICAgfSAvL2FsZXJ0KHRoaXMuZmlsdGVyKQogICAgICAvL2FsZXJ0KHRoaXMuaW5wdXRGaWx0ZXIpCgogICAgfSwKICAgIHF1ZXJ5Q2xhc3NlOiBmdW5jdGlvbiBxdWVyeUNsYXNzZShzcGFycWwsIHJvdykgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICAvKmF4aW9zLnBvc3QoZmxhc2tTcGFycWwsIHsKICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5OiAndGhpcy5zcGFycWwnLAogICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICd1dXV1JwogICAgICAgICAgICAgICAgICB9KSovCgoKICAgICAgYXhpb3MoewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIHVybDogbmV0bGFuZ19ncmFwaGRiLAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICJBY2NlcHQiOiAidGV4dC9jc3YiCiAgICAgICAgfSwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICBxdWVyeTogc3BhcnFsCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKCiAgICAgICAgX3RoaXMubmV3U3ViQ2xhc3NlKGRhdGEsIHJvdyk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCiAgICBuZXdTdWJDbGFzc2U6IGZ1bmN0aW9uIG5ld1N1YkNsYXNzZShkYXRhLCByb3cpIHsKICAgICAgLy9sZXQgc3ViY2xhc3NlcyA9IHRoaXMuZmluZE9iamVjdCh0aGlzLmNsYXNzZXMsICJpZCIsIGlkKTsKCiAgICAgIC8qbGV0IGZvcm0gPSBgCiAgICAgICAgICA8c2VsZWN0IG5hbWU9InN1YmNsYXNzZXMiIGlkPSJzdWJjbGFzc2VzIj4KICAgICAgICAgICAgPG9wdGlvbiBkaXNhYmxlZCBzZWxlY3RlZCBjbGFzcz0iZGlzYWJsZWQtb3B0aW9uIj5GaWx0cmFyIGAgKyByb3cudGV4dCArIGAgcXVlIG1lbmNpb25lbS4uLjwvb3B0aW9uPgogICAgICAgICAgICBgCiAgICAgIGZvcm0gPSBmb3JtICsgYAogICAgICAgICAgPC9zZWxlY3Q+CiAgICAgIGAqLwogICAgICB2YXIgY2xlYW5lZCA9IHRoaXMubXlOb3JtYWxpemUoSlNPTi5wYXJzZShkYXRhKSk7IC8vY29uc29sZS5sb2codGhpcy5teU5vcm1hbGl6ZShkYXRhKSkKCiAgICAgIHRoaXMuc3ViY2xhc3NlcyA9IGNsZWFuZWQ7IC8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInNlYXJjaCIpLmFwcGVuZENoaWxkKGZvcm0pOyAKICAgICAgLy9hbGVydChzdWJjbGFzc2VzLnN1YmNsYXNzZXNbMV0pOwogICAgfSwKICAgIGZpbmRPYmplY3Q6IGZ1bmN0aW9uIGZpbmRPYmplY3Qob2JqLCBrZXksIHZhbHVlKSB7CiAgICAgIHJldHVybiBvYmouZmluZChmdW5jdGlvbiAodikgewogICAgICAgIHJldHVybiB2W2tleV0gPT09IHZhbHVlOwogICAgICB9KTsKICAgIH0sCiAgICBteU5vcm1hbGl6ZTogZnVuY3Rpb24gbXlOb3JtYWxpemUocikgewogICAgICByZXR1cm4gci5yZXN1bHRzLmJpbmRpbmdzLm1hcChmdW5jdGlvbiAobykgewogICAgICAgIHZhciBub3ZvID0ge307CgogICAgICAgIGZvciAodmFyIF9pID0gMCwgX09iamVjdCRlbnRyaWVzID0gT2JqZWN0LmVudHJpZXMobyk7IF9pIDwgX09iamVjdCRlbnRyaWVzLmxlbmd0aDsgX2krKykgewogICAgICAgICAgdmFyIF9PYmplY3QkZW50cmllcyRfaSA9IF9zbGljZWRUb0FycmF5KF9PYmplY3QkZW50cmllc1tfaV0sIDIpLAogICAgICAgICAgICAgIGsgPSBfT2JqZWN0JGVudHJpZXMkX2lbMF0sCiAgICAgICAgICAgICAgdiA9IF9PYmplY3QkZW50cmllcyRfaVsxXTsKCiAgICAgICAgICBub3ZvW2tdID0gdi52YWx1ZTsKICAgICAgICB9IC8vbm92by5zb3J0KChhLCBiKSA9PiAoYS5yb3cgPiBiLnJvdykgPyAxIDogLTEpCgoKICAgICAgICByZXR1cm4gbm92bzsKICAgICAgfSk7CiAgICB9LAogICAgbm9ybWFsaXplQXJyYXk6IGZ1bmN0aW9uIG5vcm1hbGl6ZUFycmF5KHIpIHsKICAgICAgcmV0dXJuIHIucmVzdWx0cy5iaW5kaW5ncy5tYXAoZnVuY3Rpb24gKG8pIHsKICAgICAgICB2YXIgbm92byA9IFtdOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKCiAgICAgICAgZm9yICh2YXIgX2kyID0gMCwgX09iamVjdCRlbnRyaWVzMiA9IE9iamVjdC5lbnRyaWVzKG8pOyBfaTIgPCBfT2JqZWN0JGVudHJpZXMyLmxlbmd0aDsgX2kyKyspIHsKICAgICAgICAgIHZhciBfT2JqZWN0JGVudHJpZXMyJF9pID0gX3NsaWNlZFRvQXJyYXkoX09iamVjdCRlbnRyaWVzMltfaTJdLCAyKSwKICAgICAgICAgICAgICBrID0gX09iamVjdCRlbnRyaWVzMiRfaVswXSwKICAgICAgICAgICAgICB2ID0gX09iamVjdCRlbnRyaWVzMiRfaVsxXTsKCiAgICAgICAgICBub3ZvLnB1c2godi52YWx1ZSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gbm92bzsKICAgICAgfSk7CiAgICB9LAogICAgdGFibGVRdWVyeTogZnVuY3Rpb24gdGFibGVRdWVyeShjbGFzc2UxLCBjbGFzc2UyLCBzdWJjbGFzcywgZmlsdGVyKSB7CiAgICAgIHRoaXMudGFibGVDb3VudGVyKGNsYXNzZTEsIGNsYXNzZTIsIHN1YmNsYXNzLCBmaWx0ZXIpOwogICAgICB2YXIgc3BhcnFsID0gIlxuU0VMRUNUIERJU1RJTkNUID90aXRsZSAoU0FNUExFKD9hcnRpY2xlKSBBUyA/YXJ0aWNsZSkgKFNBTVBMRSg/ZGF0YVB1YikgQVMgP2RhdGFQdWIpIChTQU1QTEUoP2xpbmspIEFTID9saW5rKSBXSEVSRSB7XG4gID9hcnRpY2xlIGEgOkFydGljbGUgLlxuICA/YXJ0aWNsZSA6ZGF0YVB1YiA/ZGF0YVB1YiAuXG4gID9hcnRpY2xlIDp0aXRsZSA/dGl0bGUgLlxuICA/YXJ0aWNsZSA6bGluayA/bGluayAuXG4gICM/YXJ0aWNsZSA6dGV4dCA/dGV4dCAuXG4gICI7CgogICAgICBpZiAoc3ViY2xhc3MgIT0gJycpIHsKICAgICAgICBzcGFycWwgPSBzcGFycWwgKyAiXG4gICAgP2FydGljbGUgOnJlZmVyZXMiICsgY2xhc3NlMSArICIgP3N1YmNsYXNzIC5cbiAgICA/c3ViY2xhc3MgOiIgKyBjbGFzc2UyICsgIiBcIiIgKyBzdWJjbGFzcyArICJcIiAuIjsKICAgICAgfSBlbHNlIHsKICAgICAgICBzcGFycWwgPSBzcGFycWwgKyAiXG4gICAgP2FydGljbGUgOnJlZmVyZXMiICsgY2xhc3NlMSArICIgP2NsYXNzZSAuIjsKICAgICAgfQoKICAgICAgaWYgKGZpbHRlciAhPSAnJykgewogICAgICAgIHNwYXJxbCA9IHNwYXJxbCArIGZpbHRlcjsKICAgICAgfQoKICAgICAgc3BhcnFsID0gc3BhcnFsICsgIlxufVxuR1JPVVAgQlkgP3RpdGxlXG5MSU1JVCAiICsgdGhpcy5saW1pdCArICJcbiAgICAiOyAvL3RoaXMucXVlcnkgPSBlbmNvZGVVUklDb21wb25lbnQoc3BhcnFsKTsKCiAgICAgIHRoaXMucXVlcnkgPSBzcGFycWw7CgogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXhpb3MoewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIHVybDogbmV0bGFuZ19ncmFwaGRiLAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICJBY2NlcHQiOiAidGV4dC9jc3YiCiAgICAgICAgfSwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICBxdWVyeTogc3BhcnFsCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKCiAgICAgICAgX3RoaXMuc2V0VGFibGUoZGF0YSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgdGFibGVDb3VudGVyOiBmdW5jdGlvbiB0YWJsZUNvdW50ZXIoY2xhc3NlMSwgY2xhc3NlMiwgc3ViY2xhc3MsIGZpbHRlcikgewogICAgICB2YXIgc3BhcnFsID0gIlxuU0VMRUNUIChDT1VOVChESVNUSU5DVCA/dGl0bGUpIGFzID9jb3VudCkgV0hFUkUge1xuICA/YXJ0aWNsZSBhIDpBcnRpY2xlIC5cbiAgP2FydGljbGUgOmRhdGFQdWIgP2RhdGFQdWIgLlxuICA/YXJ0aWNsZSA6dGl0bGUgP3RpdGxlIC5cbiAgP2FydGljbGUgOmxpbmsgP2xpbmsgLlxuICA/YXJ0aWNsZSA6dGV4dCA/dGV4dCAuXG4gICI7CgogICAgICBpZiAoc3ViY2xhc3MgIT0gJycpIHsKICAgICAgICBzcGFycWwgPSBzcGFycWwgKyAiXG4gICAgP2FydGljbGUgOnJlZmVyZXMiICsgY2xhc3NlMSArICIgP3N1YmNsYXNzIC5cbiAgICA/c3ViY2xhc3MgOiIgKyBjbGFzc2UyICsgIiBcIiIgKyBzdWJjbGFzcyArICJcIiAuIjsKICAgICAgfSBlbHNlIHsKICAgICAgICBzcGFycWwgPSBzcGFycWwgKyAiXG4gICAgP2FydGljbGUgOnJlZmVyZXMiICsgY2xhc3NlMSArICIgP2NsYXNzZSAuIjsKICAgICAgfQoKICAgICAgaWYgKGZpbHRlciAhPSAnJykgewogICAgICAgIHNwYXJxbCA9IHNwYXJxbCArIGZpbHRlcjsKICAgICAgfQoKICAgICAgc3BhcnFsID0gc3BhcnFsICsgIlxufVxuI0dST1VQIEJZID90aXRsZVxuICAgICI7CgogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXhpb3MoewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIHVybDogbmV0bGFuZ19ncmFwaGRiLAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICJBY2NlcHQiOiAidGV4dC9jc3YiCiAgICAgICAgfSwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICBxdWVyeTogc3BhcnFsCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKCiAgICAgICAgX3RoaXMuc2V0Q291bnRUYWJsZShkYXRhKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICBzZXRUYWJsZTogZnVuY3Rpb24gc2V0VGFibGUoZGF0YSkgewogICAgICB0aGlzLnRhYmxlID0gdGhpcy5teU5vcm1hbGl6ZShKU09OLnBhcnNlKGRhdGEpKTsKICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICB9LAogICAgc2V0Q291bnRUYWJsZTogZnVuY3Rpb24gc2V0Q291bnRUYWJsZShkYXRhKSB7CiAgICAgIHRoaXMudGFibGVDb3VudCA9IEpTT04ucGFyc2UoZGF0YSkucmVzdWx0cy5iaW5kaW5nc1swXS5jb3VudC52YWx1ZTsKICAgIH0sCiAgICBkb3dubG9hZDogZnVuY3Rpb24gZG93bmxvYWQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBheGlvcyh7CiAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgdXJsOiBuZXRsYW5nX2dyYXBoZGIsCiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgIkFjY2VwdCI6ICJ0ZXh0L2NzdiIKICAgICAgICB9LAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIHF1ZXJ5OiB0aGlzLnF1ZXJ5CiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIC8vbGV0IGRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgIC8vX3RoaXMuc2V0Q291bnRUYWJsZShkYXRhKTsKICAgICAgICAvL3Jlc3BvbnNlLmRhdGEucGlwZShmcy5jcmVhdGVXcml0ZVN0cmVhbSgidG9kYXlzX3BpY3R1cmUuY3N2IikpOwogICAgICAgIF90aGlzLmZvcmNlRmlsZURvd25sb2FkKHJlc3BvbnNlKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICBmb3JjZUZpbGVEb3dubG9hZDogZnVuY3Rpb24gZm9yY2VGaWxlRG93bmxvYWQocmVzcG9uc2UpIHsKICAgICAgdmFyIHVybCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKG5ldyBCbG9iKFtyZXNwb25zZS5kYXRhXSkpOwogICAgICB2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgICAgbGluay5ocmVmID0gdXJsOwogICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnZG93bmxvYWQnLCAnZGF0YS5jc3YnKTsgLy9vciBhbnkgb3RoZXIgZXh0ZW5zaW9uCgogICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGxpbmspOwogICAgICBsaW5rLmNsaWNrKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Search.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container>\n    <v-row class=\"text-center\">\n      <v-col class=\"mb-4\">\n        <h1 class=\"display-2 font-weight-bold mb-3\">\n          Pesquisar \n        </h1>\n\n      <v-layout row wrap justify-center>\n          <v-switch align-center\n            v-model=\"db\"\n            :label=\"`Corpus: ${db.toString()}`\"\n            false-value=\"indiferenciado\"\n            true-value=\"minorias\"\n          ></v-switch>\n      </v-layout>\n\n      <div id=\"search\" class=\"search\">\n\n<div id=\"loading-icon-search\" v-if=\"loading\">\n<v-progress-circular :indeterminate=\"loading\" :value=\"0\" size=\"24\" class=\"ml-2\"></v-progress-circular>\n</div>\n\n\n\n    <br><br>\n\n                <select name=\"classes\" id=\"classes\" @input=\"classeOption($event)\">\n                  <option disabled selected class=\"disabled-option\">Procurar artigos que mencionem...</option>\n                  <option v-for=\"(classe, index) in classes\" :key=\"index\" :value=\"classe.id\">{{classe.text}}</option>\n                </select>\n\n                <span v-if=\"subclasses\">\n                <br>\n                <select name=\"subclasses\" id=\"subclasses\" @input=\"subclassOption($event)\">\n                  <option disabled selected class=\"disabled-option\">Filtrar {{activeClasse.text}} que mencionem...</option>\n                  <option v-for=\"(classe, index) in subclassesFilter\" :key=\"index\" :value=\"classe.row\">{{classe.row.charAt(0).toUpperCase() + classe.row.slice(1)}}</option>\n                </select>\n              </span>\n\n               <span v-if=\"activeSubclasses\">\n                <br>\n                <select name=\"subclasses3\" id=\"subclasses3\" @input=\"filtroOption($event)\">\n                  <option disabled selected class=\"disabled-option\">Filtrar resultados por...</option>\n                   <option v-for=\"(filter, index) in filters\" :key=\"index\" :value=\"filter.value\">{{filter.text}}</option>\n                </select>\n              </span>\n                \n                <span v-if=\"filter\">\n                <br>\n                <input v-model=\"inputFilter\" id=\"searchInput\" type=\"text\" placeholder=\"Search...\" v-on:keyup.enter=\"inputOption\">\n                <button type=\"button\" @click=\"inputOption()\"><i class=\"fa fa-search\"></i></button>\n              </span>\n\n\n<div v-if=\"loading\">\n<br>\n<v-progress-circular :indeterminate=\"loading\" :value=\"0\" size=\"24\" class=\"ml-2\"></v-progress-circular>\n<span style=\"color:gray;\"> Aguarde, a carregar dados...</span>\n</div>\n\n      </div>\n    </v-col>\n    </v-row>\n\n\n    <v-row class=\"text-center\" v-if=\"tableCount>0\">\n      <v-col class=\"mb-4\">\n      <h2>Resultados: {{tableCount}}</h2>\n      <br>\n      <v-btn color=\"primary\" @click=\"download()\">Download</v-btn>\n      <p style=\"color:gray:font-size:10px;text-align:center;margin-top:25px;\">*Versão web limitada a {{ limit }} resultados - efetue download para dataset completo</p>\n      </v-col>\n    </v-row>\n\n    <br>\n  <v-card v-if=\"table\">\n    <v-card-title>\n        Dados\n        <v-spacer></v-spacer>\n        <v-text-field\n          v-model=\"search\"\n          append-icon=\"mdi-magnify\"\n          label=\"Search\"\n          single-line\n          hide-details\n        ></v-text-field>\n    </v-card-title>\n    <v-data-table\n      :headers=\"hdados\"\n      :items=\"table\"\n      class=\"elevation-1\"\n      :search=\"search\"\n      :footer-props=\"{'items-per-page-options':[25, 50, 100, 200, 500, -1], 'items-per-page-text':'Resultados por página:'}\"\n      :items-per-page=\"10\"\n      :loading=\"loading\"\n    >\n\n    <template v-slot:item.dataPub=\"row\">\n    {{ row.item.dataPub.split(\"T\")[0] }}\n  </template>\n  \n    <template v-slot:item.article=\"row\">\n    <b><a :set='id = row.item.article.split(\"#\")[1]' :href=\"metadados+id\" target=\"_blank\">\n     METADADOS\n    </a></b>\n  </template>\n\n  <template v-slot:item.link=\"row\">\n    <b><a :href=row.item.link target=\"_blank\">\n     URL ORIGINAL\n    </a></b>\n  </template>\n\n    </v-data-table>\n  </v-card>\n\n  <br>\n\n    <v-row class=\"text-center\">\n      <v-col class=\"mb-4\">\n      <blockquote id=\"search-note\">Poderá efectuar qualquer tipo de pesquisa e descarregamento de corpus de dados através de queries <a href=\"http://127.0.0.1:7200\">SPARQL</a>. Esta página pretende ser um mecanismo de pesquisa simplificado (limitado a 500 resultados), com interface gráfica e formulário de filtragem visual, para utilizadores que não estejam confortáveis com as especificações técnicas de consulta de dados em ontologias. No entanto será sempre inferior à precisão e profundidade de pesquisa direta com queries SPARQL, por essa razão recomendamos consulta das especificões.</blockquote>\n      </v-col>\n    </v-row>\n\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios'\n//const lhost = require(\"@/config/global\").lhost;\n//const graphdb = require(\"@/config/global\").graphdb;\n//const flaskSparql = require(\"@/config/global\").flaskSparql + '?output=json&external=true';\n//const flaskDownload = require(\"@/config/global\").flaskDownload + '?output=csv';\n\nconst netlang_graphdb = require(\"@/config/global\").netlang_graphdb\n\n  export default {\n    name: 'Search',\n\n  /*devServer: {\n        proxy: 'http://127.0.0.1:8080/',\n    },*/\n\n  /*rules: {\n    'no-unused-vars': 'off'\n  },*/\n\n    data: () => ({\n\n    search: '',\n      \n    hdados: [\n      /*{\n        text: 'Título',\n        align: 'start',\n        sortable: false,\n        value: 'row',\n      },\n      { text: 'Data', value: 'row' },\n      { text: 'Texto', value: 'row' },*/\n      { text: 'Data', sortable: true, value: 'dataPub' },\n      //{ text: 'Minoria', sortable: true, value: 'minority' },\n      { text: 'Título', value: 'title' },\n      { text: 'ID', value: 'article' },\n      { text: 'Original', value: 'link' },\n      //{ text: 'Texto', value: 'text' },\n    ],\n\n    classes: [\n      {'text': 'Minorias', 'id': 'minority', 'subclasses': ['Minority','minority']},\n      {'text': 'Pessoas', 'id': 'personName', 'subclasses': ['Person', 'personName']},\n      {'text': 'Palavras-chave', 'id': 'keyword', 'subclasses': ['Keyword','keyword']},\n      {'text': 'Partidos', 'id': 'politicalParty', 'subclasses': ['PoliticalParty', 'politicalParty']},\n      {'text': 'Animais', 'id': 'animal', 'subclasses': ['Animal', 'animal']},\n      {'text': 'Etnias', 'id': 'ethnicity', 'subclasses': ['Ethnicity', 'ethnicity']},\n      {'text': 'Religiões', 'id': 'religion', 'subclasses': ['Religion', 'religion']},\n      {'text': 'Cidades', 'id': 'city', 'subclasses': ['City', 'city']},\n      {'text': 'Países', 'id': 'country', 'subclasses': ['Country', 'country']},\n      {'text': 'Continentes', 'id': 'continent', 'subclasses': ['Continent', 'continent']},\n      {'text': 'Outros Lugares', 'id': 'otherPlace', 'subclasses': ['OtherPlace', 'otherPlace']},\n      {'text': 'Dias da Semana', 'id': 'weekday', 'subclasses': ['Weekday', 'weekday']},\n      {'text': 'Meses', 'id': 'month', 'subclasses': ['Month', 'month']},\n      {'text': 'Entidades', 'id': 'entity', 'subclasses': ['Entity', 'entity']},\n      {'text': 'Clubes de Futebol', 'id': 'footbal', 'subclasses': ['Football', 'footbal']},\n      {'text': 'Desportos', 'id': 'sport', 'subclasses': ['Sport', 'sport']},\n      {'text': 'Tags do Jornal', 'id': 'tag', 'subclasses': ['Tag','tag']},\n      {'text': 'Marcas de Produtos', 'id': 'brand', 'subclasses': ['Brand','brand']}, \n      {'text': 'Canais de TV', 'id': 'tvChannel', 'subclasses': ['TvChannel','tvChannel']},\n      {'text': 'Marcas de Carros', 'id': 'carBrand', 'subclasses': ['CarBrand','carBrand']}, \n      {'text': 'Desportos', 'id': 'sport', 'subclasses': ['Sport','sport']},\n\n    ],\n\n    filters: [\n      {'text': 'Ano de publicação maior do que...', 'value': 'dataMaior'},\n      {'text': 'Ano de publicação menor do que...', 'value': 'dataMenor'},\n      {'text': 'Ano de publicação maior a...', 'value': 'dataIgual'},\n      {'text': 'Minoria igual a...', 'value': 'minoriaIgual'},\n      {'text': 'Contém palavra igual a...', 'value': 'keywordIgual'},\n    ],\n\n    activeClasse: null,\n\n    subclasses: null,\n\n    activeSubclasses: null,\n\n    subclasses3: null,\n\n    table: null,\n\n    tableCount: null,\n\n    loading: false,\n\n    filter: null,\n\n    inputFilter: null,\n\n    limit: '5000',\n\n    query: null,\n\n    db: 'netlang2',\n\n    articlePage: 'http://minors.ilch.uminho.pt/articles',\n\n\n    }),\n\n    computed: {\n      subclassesFilter: function () {\n        return this.subclasses.filter(classe => !['311', '112', '1980s', '1981', '702', '99'].includes(classe.row))\n      },\n\n      metadados: function() {      \n        let link = '';\n        if(this.db=='indiferenciado') {\n            link = this.articlePage+'?db=indiferenciado&id=';\n        }\n        else {\n            link = this.articlePage+'?id=';\n        }\n        return link;\n      }\n    },\n\n  mounted () {\n  //  alert(this.selected_classe)\n  //  this.selected_classe = this.classes[0].text;\n  },\n\n  created: async function(){\n    try {\n      //let response = await axios.get(lhost + \"/api/passadeiras\");\n      //this.crosswalks = response.data\n\n    } \n    catch (e) {\n      return e;\n    }\n    //this.timer = setInterval(this.updateData, 1000)\n  },\n\n  methods: {\n\n    classeOption(event) {\n      let id = event.target.value;\n      let row = this.findObject(this.classes, \"id\", id);\n      this.activeClasse = row;\n      let query = `\nSELECT DISTINCT ?row WHERE {\n  ?article a :` + row.subclasses[0] + ` .\n  ?article :` + row.subclasses[1] + ` ?row .\n}\nORDER BY ?row\n      `;\n\n      this.loading = true;\n      this.subclasses = null;\n      this.activeSubclasses = null;\n      this.filter = null;\n      this.inputFilter = null;\n      this.queryClasse(query, row);\n      this.tableQuery(row.subclasses[0], row.subclasses[1], '', '');\n      //this.queryClasse(query, row)\n\n      //this.newSubClasse(query, row);\n\n      //this.teste(row);\n    },\n\n    subclassOption(event) {\n      this.loading = true;\n      this.activeSubclasses = null;\n      this.filter = null;\n      this.inputFilter = null;\n      this.activeSubclasses = event.target.value;\n      this.tableQuery(this.activeClasse.subclasses[0], this.activeClasse.subclasses[1], this.activeSubclasses, '');\n    },\n\n    filtroOption(event) {\n      this.filter = event.target.value;\n      this.inputFilter = null;\n    },\n\n    inputOption() {\n      this.loading = true;\n      let filter = '';\n      if(this.filter == 'dataMaior') {\n        filter = `\n        FILTER(YEAR(?dataPub) >= ` + this.inputFilter + `) .`\n      }\n      else if(this.filter == 'dataMenor') {\n        filter = `\n        FILTER(YEAR(?dataPub) <= ` + this.inputFilter + `) .`\n      }\n      else if(this.filter == 'dataIgual') {\n        filter = `\n        FILTER(YEAR(?dataPub) = ` + this.inputFilter + `) .`\n      }\n      else if(this.filter == 'minoriaIgual') {\n        filter = `\n        ?article :referesMinority ?Minority .\n        ?Minority :minority ?minority .\n        FILTER (CONTAINS(?minority , \"` + this.inputFilter.toLowerCase() + `\")) .`\n      }\n      else if(this.filter == 'keywordIgual') {\n        filter = `\n        FILTER (CONTAINS(?text , \"` + this.inputFilter.toLowerCase() + `\")) .`\n      }\n      \n      if (filter!='') {\n        this.tableQuery(this.activeClasse.subclasses[0], this.activeClasse.subclasses[1], this.activeSubclasses, filter);\n      }\n      //alert(this.filter)\n      //alert(this.inputFilter)\n    },\n\n    queryClasse(sparql, row) {\n      var _this = this;\n    /*axios.post(flaskSparql, {\n                    query: 'this.sparql',\n                    description: 'uuuu'\n                })*/\n            axios({\n            method: 'POST',\n            url: netlang_graphdb,\n            headers: {\"Accept\":\"text/csv\"}, \n            data: {query: sparql}\n            })\n            .then(function (response) {\n                let data = response.data;\n                _this.newSubClasse(data, row);\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    },\n\n    // eslint-disable-next-line no-unused-vars\n    newSubClasse(data, row) {\n\n      //let subclasses = this.findObject(this.classes, \"id\", id);\n      /*let form = `\n          <select name=\"subclasses\" id=\"subclasses\">\n            <option disabled selected class=\"disabled-option\">Filtrar ` + row.text + ` que mencionem...</option>\n            `\n      form = form + `\n          </select>\n      `*/\n\n      let cleaned = this.myNormalize(JSON.parse(data))\n\n      //console.log(this.myNormalize(data))\n\n      this.subclasses = cleaned;\n      //document.getElementById(\"search\").appendChild(form); \n      //alert(subclasses.subclasses[1]);\n\n\n    },\n\n  findObject(obj, key, value) {\n    return obj.find(function(v){ return v[key] === value});\n  },\n\n  myNormalize(r) {\n    return r.results.bindings.map(o => {\n        var novo = {}\n        for (let [k, v] of Object.entries(o)) {\n                novo[k] = v.value\n          }\n          //novo.sort((a, b) => (a.row > b.row) ? 1 : -1)\n        return novo\n    })\n  },\n\n  normalizeArray(r) {\n    return r.results.bindings.map(o => {\n        var novo = []\n        // eslint-disable-next-line no-unused-vars\n        for (let [k, v] of Object.entries(o)) {\n            novo.push(v.value)\n          }\n        return novo  \n    })\n  },\n\n\n  tableQuery(classe1, classe2, subclass, filter) {\n    this.tableCounter(classe1, classe2, subclass, filter);\n\n    let sparql = `\nSELECT DISTINCT ?title (SAMPLE(?article) AS ?article) (SAMPLE(?dataPub) AS ?dataPub) (SAMPLE(?link) AS ?link) WHERE {\n  ?article a :Article .\n  ?article :dataPub ?dataPub .\n  ?article :title ?title .\n  ?article :link ?link .\n  #?article :text ?text .\n  `\n  if(subclass!='') {\n    sparql = sparql + `\n    ?article :referes`+classe1+` ?subclass .\n    ?subclass :`+classe2+` \"`+subclass+`\" .`\n  }\n  else {\n    sparql = sparql + `\n    ?article :referes`+classe1+` ?classe .`\n  }\n  if(filter!='') {\n    sparql = sparql + filter\n  }\n\n   sparql = sparql + `\n}\nGROUP BY ?title\nLIMIT ` + this.limit + `\n    `\n\n    //this.query = encodeURIComponent(sparql);\n    this.query = sparql;\n    var _this = this;\n\n    axios({\n    method: 'POST',\n    url: netlang_graphdb,\n    headers: {\"Accept\":\"text/csv\"}, \n    data: {query: sparql}\n    })\n    .then(function (response) {\n        let data = response.data;\n        _this.setTable(data);\n    })\n    .catch(function (error) {\n        console.log(error)\n    })\n\n  },\n\ntableCounter(classe1, classe2, subclass, filter) {\n      let sparql = `\nSELECT (COUNT(DISTINCT ?title) as ?count) WHERE {\n  ?article a :Article .\n  ?article :dataPub ?dataPub .\n  ?article :title ?title .\n  ?article :link ?link .\n  ?article :text ?text .\n  `\n  if(subclass!='') {\n    sparql = sparql + `\n    ?article :referes`+classe1+` ?subclass .\n    ?subclass :`+classe2+` \"`+subclass+`\" .`\n  }\n  else {\n    sparql = sparql + `\n    ?article :referes`+classe1+` ?classe .`\n  }\n  if(filter!='') {\n    sparql = sparql + filter\n  }\n\n   sparql = sparql + `\n}\n#GROUP BY ?title\n    `\n    \n    var _this = this;\n\n    axios({\n    method: 'POST',\n    url: netlang_graphdb,\n    headers: {\"Accept\":\"text/csv\"}, \n    data: {query: sparql}\n    })\n    .then(function (response) {\n        let data = response.data;\n        _this.setCountTable(data);\n    })\n    .catch(function (error) {\n        console.log(error)\n    })\n},\n\n  setTable(data) {\n    this.table = this.myNormalize(JSON.parse(data));\n    this.loading = false;\n  },\n\n  setCountTable(data) {\n    this.tableCount = JSON.parse(data).results.bindings[0].count.value;\n  },\n\n  download() {\n    var _this = this;\n    axios({\n    method: 'POST',\n    url: netlang_graphdb,\n    headers: {\"Accept\":\"text/csv\"}, \n    data: {query: this.query}\n    })\n    .then(function (response) {\n        //let data = response.data;\n        //_this.setCountTable(data);\n        //response.data.pipe(fs.createWriteStream(\"todays_picture.csv\"));\n        _this.forceFileDownload(response);\n    })\n    .catch(function (error) {\n        console.log(error)\n    })\n\n  },\n\n    forceFileDownload(response){\n      const url = window.URL.createObjectURL(new Blob([response.data]))\n      const link = document.createElement('a')\n      link.href = url\n      link.setAttribute('download', 'data.csv') //or any other extension\n      document.body.appendChild(link)\n      link.click()\n    },\n\n\n}\n}\n</script>\n"],"sourceRoot":"src/components"}]}